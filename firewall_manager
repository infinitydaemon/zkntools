# zktools easy firewall manager to block / unblock countries in case of a DDoS attack on datacentre. 
# The reason for this is sometimes the datacentre redirects legit traffic to their null routes without any notification.
# This can also be used for SOHO / Homme users for Edge Node 400.
#!/bin/bash

# List all countries with their codes
declare -A countries=(
    ["Afghanistan"]="AF"
    ["Albania"]="AL"
    ["Algeria"]="DZ"
    ["Andorra"]="AD"
    ["Angola"]="AO"
    ["Antigua and Barbuda"]="AG"
    ["Argentina"]="AR"
    ["Armenia"]="AM"
    ["Australia"]="AU"
    ["Austria"]="AT"
    ["Azerbaijan"]="AZ"
    ["Bahamas"]="BS"
    ["Bahrain"]="BH"
    ["Bangladesh"]="BD"
    ["Barbados"]="BB"
    ["Belarus"]="BY"
    ["Belgium"]="BE"
    ["Belize"]="BZ"
    ["Benin"]="BJ"
    ["Bhutan"]="BT"
    ["Bolivia"]="BO"
    ["Bosnia and Herzegovina"]="BA"
    ["Botswana"]="BW"
    ["Brazil"]="BR"
    ["Brunei"]="BN"
    ["Bulgaria"]="BG"
    ["Burkina Faso"]="BF"
    ["Burundi"]="BI"
    ["Cabo Verde"]="CV"
    ["Cambodia"]="KH"
    ["Cameroon"]="CM"
    ["Canada"]="CA"
    ["Central African Republic"]="CF"
    ["Chad"]="TD"
    ["Chile"]="CL"
    ["China"]="CN"
    ["Colombia"]="CO"
    ["Comoros"]="KM"
    ["Congo"]="CG"
    ["Costa Rica"]="CR"
    ["Croatia"]="HR"
    ["Cuba"]="CU"
    ["Cyprus"]="CY"
    ["Czech Republic"]="CZ"
    ["Denmark"]="DK"
    ["Djibouti"]="DJ"
    ["Dominica"]="DM"
    ["Dominican Republic"]="DO"
    ["Ecuador"]="EC"
    ["Egypt"]="EG"
    ["El Salvador"]="SV"
    ["Equatorial Guinea"]="GQ"
    ["Eritrea"]="ER"
    ["Estonia"]="EE"
    ["Eswatini"]="SZ"
    ["Ethiopia"]="ET"
    ["Fiji"]="FJ"
    ["Finland"]="FI"
    ["France"]="FR"
    ["Gabon"]="GA"
    ["Gambia"]="GM"
    ["Georgia"]="GE"
    ["Germany"]="DE"
    ["Ghana"]="GH"
    ["Greece"]="GR"
    ["Grenada"]="GD"
    ["Guatemala"]="GT"
    ["Guinea"]="GN"
    ["Guinea-Bissau"]="GW"
    ["Guyana"]="GY"
    ["Haiti"]="HT"
    ["Honduras"]="HN"
    ["Hungary"]="HU"
    ["Iceland"]="IS"
    ["India"]="IN"
    ["Indonesia"]="ID"
    ["Iran"]="IR"
    ["Iraq"]="IQ"
    ["Ireland"]="IE"
    ["Israel"]="IL"
    ["Italy"]="IT"
    ["Jamaica"]="JM"
    ["Japan"]="JP"
    ["Jordan"]="JO"
    ["Kazakhstan"]="KZ"
    ["Kenya"]="KE"
    ["Kiribati"]="KI"
    ["Korea, North"]="KP"
    ["Korea, South"]="KR"
    ["Kosovo"]="XK"
    ["Kuwait"]="KW"
    ["Kyrgyzstan"]="KG"
    ["Laos"]="LA"
    ["Latvia"]="LV"
    ["Lebanon"]="LB"
    ["Lesotho"]="LS"
    ["Liberia"]="LR"
    ["Libya"]="LY"
    ["Liechtenstein"]="LI"
    ["Lithuania"]="LT"
    ["Luxembourg"]="LU"
    ["Madagascar"]="MG"
    ["Malawi"]="MW"
    ["Malaysia"]="MY"
    ["Maldives"]="MV"
    ["Mali"]="ML"
    ["Malta"]="MT"
    ["Marshall Islands"]="MH"
    ["Mauritania"]="MR"
    ["Mauritius"]="MU"
    ["Mexico"]="MX"
    ["Micronesia"]="FM"
    ["Moldova"]="MD"
    ["Monaco"]="MC"
    ["Mongolia"]="MN"
    ["Montenegro"]="ME"
    ["Morocco"]="MA"
    ["Mozambique"]="MZ"
    ["Myanmar"]="MM"
    ["Namibia"]="NA"
    ["Nauru"]="NR"
    ["Nepal"]="NP"
    ["Netherlands"]="NL"
    ["New Zealand"]="NZ"
    ["Nicaragua"]="NI"
    ["Niger"]="NE"
    ["Nigeria"]="NG"
    ["North Macedonia"]="MK"
    ["Norway"]="NO"
    ["Oman"]="OM"
    ["Pakistan"]="PK"
    ["Palau"]="PW"
    ["Palestine"]="PS"
    ["Panama"]="PA"
    ["Papua New Guinea"]="PG"
    ["Paraguay"]="PY"
    ["Peru"]="PE"
    ["Philippines"]="PH"
    ["Poland"]="PL"
    ["Portugal"]="PT"
    ["Qatar"]="QA"
    ["Romania"]="RO"
    ["Russia"]="RU"
    ["Rwanda"]="RW"
    ["Saint Kitts and Nevis"]="KN"
    ["Saint Lucia"]="LC"
    ["Saint Vincent and the Grenadines"]="VC"
    ["Samoa"]="WS"
    ["San Marino"]="SM"
    ["Sao Tome and Principe"]="ST"
    ["Saudi Arabia"]="SA"
    ["Senegal"]="SN"
    ["Serbia"]="RS"
    ["Seychelles"]="SC"
    ["Sierra Leone"]="SL"
    ["Singapore"]="SG"
    ["Slovakia"]="SK"
    ["Slovenia"]="SI"
    ["Solomon Islands"]="SB"
    ["Somalia"]="SO"
    ["South Africa"]="ZA"
    ["South Sudan"]="SS"
    ["Spain"]="ES"
    ["Sri Lanka"]="LK"
    ["Sudan"]="SD"
    ["Suriname"]="SR"
    ["Sweden"]="SE"
    ["Switzerland"]="CH"
    ["Syria"]="SY"
    ["Taiwan"]="TW"
    ["Tajikistan"]="TJ"
    ["Tanzania"]="TZ"
    ["Thailand"]="TH"
    ["Timor-Leste"]="TL"
    ["Togo"]="TG"
    ["Tonga"]="TO"
    ["Trinidad and Tobago"]="TT"
    ["Tunisia"]="TN"
    ["Turkey"]="TR"
    ["Turkmenistan"]="TM"
    ["Tuvalu"]="TV"
    ["Uganda"]="UG"
    ["Ukraine"]="UA"
    ["United Arab Emirates"]="AE"
    ["United Kingdom"]="GB"
    ["United States"]="US"
    ["Uruguay"]="UY"
    ["Uzbekistan"]="UZ"
    ["Vanuatu"]="VU"
    ["Vatican City"]="VA"
    ["Venezuela"]="VE"
    ["Vietnam"]="VN"
    ["Yemen"]="YE"
    ["Zambia"]="ZM"
    ["Zimbabwe"]="ZW"
)

# Function to block a country
block_country() {
    # Create a dialog menu for country selection
    options=()
    for country in "${!countries[@]}"; do
        options+=("$country" "")
    done

    choice=$(dialog --menu "Select a country to block:" 20 40 10 "${options[@]}" 3>&1 1>&2 2>&3)
    if [ -z "$choice" ]; then
        dialog --msgbox "No country selected!" 10 30
        return
    fi

    country_code=${countries[$choice]}
    dialog --infobox "Blocking $choice ($country_code)..." 10 30

    # Download IP ranges for the country
    wget -O /tmp/$country_code.txt http://www.ipdeny.com/ipblocks/data/countries/$country_code.zone 2>/dev/null
    if [ ! -s /tmp/$country_code.txt ]; then
        dialog --msgbox "Failed to download IP ranges for $choice ($country_code)!" 10 50
        return
    fi

    # Create an ipset for the country
    sudo ipset create $country_code hash:net 2>/dev/null
    if [ $? -ne 0 ]; then
        dialog --msgbox "Failed to create ipset for $choice ($country_code)!" 10 50
        return
    fi

    # Add IP ranges to the ipset
    while read -r ip; do
        sudo ipset add $country_code $ip 2>/dev/null
    done < /tmp/$country_code.txt

    # Block the country using iptables
    sudo iptables -I INPUT -m set --match-set $country_code src -j DROP
    sudo iptables -I FORWARD -m set --match-set $country_code src -j DROP

    dialog --msgbox "$choice ($country_code) blocked successfully!" 10 30
}

# Function to unblock a country
unblock_country() {
    # Get list of ipsets (blocked countries)
    ipsets=$(sudo ipset list -n)

    # Create a dialog menu for country selection
    options=()
    for set in $ipsets; do
        options+=("$set" "")
    done

    if [ ${#options[@]} -eq 0 ]; then
        dialog --msgbox "No countries are currently blocked!" 10 30
        return
    fi

    choice=$(dialog --menu "Select a country to unblock:" 20 40 10 "${options[@]}" 3>&1 1>&2 2>&3)
    if [ -z "$choice" ]; then
        dialog --msgbox "No country selected!" 10 30
        return
    fi

    # Remove iptables rules and ipset
    sudo iptables -D INPUT -m set --match-set $choice src -j DROP 2>/dev/null
    sudo iptables -D FORWARD -m set --match-set $choice src -j DROP 2>/dev/null
    sudo ipset destroy $choice 2>/dev/null

    dialog --msgbox "$choice unblocked successfully!" 10 30
}

# Function to display blocked countries
show_blocked_countries() {
    ipsets=$(sudo ipset list -n)
    if [ -z "$ipsets" ]; then
        dialog --msgbox "No countries are currently blocked!" 10 30
    else
        blocked_countries=""
        for set in $ipsets; do
            blocked_countries+="$set\n"
        done
        dialog --msgbox "Blocked Countries:\n$blocked_countries" 20 40
    fi
}

# Function to block a port
block_port() {
    port=$(dialog --inputbox "Enter the port number to block:" 10 30 3>&1 1>&2 2>&3)
    if [ -z "$port" ]; then
        dialog --msgbox "Port number cannot be empty!" 10 30
        return
    fi

    sudo iptables -A INPUT -p tcp --dport $port -j DROP
    sudo iptables -A INPUT -p udp --dport $port -j DROP

    dialog --msgbox "Port $port blocked successfully!" 10 30
}

# Function to unblock a port
unblock_port() {
    port=$(dialog --inputbox "Enter the port number to unblock:" 10 30 3>&1 1>&2 2>&3)
    if [ -z "$port" ]; then
        dialog --msgbox "Port number cannot be empty!" 10 30
        return
    fi

    sudo iptables -D INPUT -p tcp --dport $port -j DROP 2>/dev/null
    sudo iptables -D INPUT -p udp --dport $port -j DROP 2>/dev/null

    dialog --msgbox "Port $port unblocked successfully!" 10 30
}

# Function to display blocked ports
show_blocked_ports() {
    blocked_ports=$(sudo iptables -L INPUT -v -n | grep DROP | awk '{print $11}' | grep -oP '\d+$' | sort -u)
    if [ -z "$blocked_ports" ]; then
        dialog --msgbox "No ports are currently blocked!" 10 30
    else
        dialog --msgbox "Blocked Ports:\n$blocked_ports" 20 40
    fi
}

# Main menu
while true; do
    choice=$(dialog --menu "Firewall Manager" 20 50 8 \
        1 "Block a Country" \
        2 "Unblock a Country" \
        3 "Show Blocked Countries" \
        4 "Block a Port" \
        5 "Unblock a Port" \
        6 "Show Blocked Ports" \
        7 "Exit" 3>&1 1>&2 2>&3)

    case $choice in
        1) block_country ;;
        2) unblock_country ;;
        3) show_blocked_countries ;;
        4) block_port ;;
        5) unblock_port ;;
        6) show_blocked_ports ;;
        7) break ;;
        *) dialog --msgbox "Invalid option!" 10 30 ;;
    esac
done

dialog --msgbox "Firewall Manager exited. Goodbye!" 10 30
